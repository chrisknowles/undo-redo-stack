import test from 'tape'
import UndoRedo from '../src/undo-redo-stack-test.js'

const undoRedo = UndoRedo.test

test('push', t => {
  const s = undoRedo()
  s.push(1)
  t.equal(s.undoStack.state[0], 1)
  s.push(2)
  t.equal(s.undoStack.state[1], 2)
  t.end()
})

test('undo', t => {
  const s = undoRedo()
  s.undo()
  t.equal(s.undoStack.state.length, 0)
  t.equal(s.redoStack.state.length, 0)
  s.push(1)
  s.undo()
  t.equal(s.undoStack.state.length, 0)
  t.equal(s.redoStack.state[0], 1)
  s.push(2)
  s.push(3)
  s.undo()
  t.equal(s.undoStack.state[0], 2)
  t.equal(s.redoStack.state[0], 1)
  t.equal(s.redoStack.state[1], 3)
  t.end()
})

test('redo', t => {
  const s = undoRedo()
  s.redo()
  t.equal(s.undoStack.state.length, 0)
  t.equal(s.redoStack.state.length, 0)
  s.push(1)
  s.push(2)
  s.undo()
  s.redo()
  t.equal(s.undoStack.state.length, 2)
  t.equal(s.undoStack.state[0], 1)
  t.equal(s.undoStack.state[1], 2)
  t.equal(s.redoStack.state.length, 0)
  t.end()
})

test('clear', t => {
  const s = undoRedo()
  s.push(1)
  s.push(2)
  s.clear()
  t.equal(s.undoStack.state.length, 0)
  t.equal(s.redoStack.state.length, 0)
  s.redo()
  t.end()
})

test('latest', t => {
  const s = undoRedo()
  s.push(1)
  s.push(2)
  t.equal(s.latest(), 2)
  s.undo()
  t.equal(s.latest(), 1)
  s.undo()
  t.equal(s.latest(), undefined)
  s.redo()
  t.equal(s.latest(), 1)
  s.redo()
  t.equal(s.latest(), 2)
  s.redo()
  t.equal(s.latest(), 2)
  t.end()
})

test('getValues', t => {
  const s = undoRedo()
  let vals = s.getValues()
  t.equal(vals.undo.length, 0)
  t.equal(vals.redo.length, 0)
  s.push(1)
  vals = s.getValues()
  t.equal(vals.undo.length, 1)
  t.equal(vals.undo[0], 1)
  t.equal(vals.redo.length, 0)
  s.push(2)
  vals = s.getValues()
  t.equal(vals.undo.length, 2)
  t.equal(vals.undo[1], 2)
  t.equal(vals.redo.length, 0)
  s.undo(2)
  vals = s.getValues()
  t.equal(vals.undo.length, 1)
  t.equal(vals.undo[0], 1)
  t.equal(vals.redo.length, 1)
  t.equal(vals.redo[0], 2)
  t.end()
})
